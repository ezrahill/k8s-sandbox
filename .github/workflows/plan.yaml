name: "K8s Terraform Infrastructure Pipeline"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PM_HOSTNAME: ${{ secrets.PM_HOSTNAME }}
  PM_USER: ${{ secrets.PM_USER }}
  PM_PASSWORD: ${{ secrets.PM_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ENDPOINT_URL_S3: ${{ secrets.AWS_S3_ENDPOINT }}

jobs:
  terraform_plan:
    name: Execute Terraform Plan
    runs-on: [self-hosted, gh-runner-01-k8s-sandbox]
    container:
      image: hashicorp/terraform:1.8.2
      options: --user root
    defaults:
      run:
        working-directory: ./Proxmox

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure Terraform Variables
        run: |
          echo "pm_hostname = \"${PM_HOSTNAME}\"" > terraform.tfvars
          echo "pm_user = \"${PM_USER}\"" >> terraform.tfvars
          echo "pm_password = \"${PM_PASSWORD}\"" >> terraform.tfvars

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan
        outputs:
          stdout: ${{ steps.plan.outputs.stdout }}
        continue-on-error: true

      - uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      #   run: terraform apply -auto-approve -input=false